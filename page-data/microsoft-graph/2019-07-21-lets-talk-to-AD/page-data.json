{"componentChunkName":"component---src-templates-blog-post-js","path":"/microsoft-graph/2019-07-21-lets-talk-to-AD/","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"10509535-1853-59aa-8733-18f4017f4cf6","excerpt":"System The project at hand We need to be able to do a list of operations that talk to active directory. List groups found active directory List users from a…","html":"<p><img src=\"/img/System.jpg\" alt=\"System\"></p>\n<h2>The project at hand</h2>\n<p>We need to be able to do a list of operations that talk to active directory.</p>\n<ul>\n<li>List groups found active directory</li>\n<li>List users from a given group</li>\n<li>Quickly check if a user is a group member</li>\n</ul>\n<h2>The how</h2>\n<p>For this process we’re going to talk to the Microsoft graph, for the purposes of this post everything is already setup so that groups and users can be found within it.</p>\n<ol>\n<li>\n<p>Obtain a bearer token</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> rootLogin <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://login.microsoftonline.com/arup.onmicrosoft.com/oauth2/v2.0/token</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  grant_type<span class=\"token punctuation\">:</span> <span class=\"token string\">'client_credentials'</span><span class=\"token punctuation\">,</span>\n  client_id<span class=\"token punctuation\">:</span>\n    process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span><span class=\"token string\">'waad_client_id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  client_secret<span class=\"token punctuation\">:</span>\n    process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span><span class=\"token string\">'waad_client_secret'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span>\n    <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  scope<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://graph.microsoft.com/.default'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> encodedUrlParams <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> key <span class=\"token operator\">+</span> <span class=\"token string\">'='</span> <span class=\"token operator\">+</span> params<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> content_type <span class=\"token operator\">=</span> <span class=\"token string\">'application/x-www-form-urlencoded'</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getAccessToken</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>rootLogin<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> content_type <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    method<span class=\"token punctuation\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token punctuation\">:</span> encodedUrlParams<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">json</span> <span class=\"token operator\">=></span>\n      json\n        <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>json<span class=\"token punctuation\">.</span>token_type<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>json<span class=\"token punctuation\">.</span>access_token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n        <span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Failed to retrieve token'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We need to talk to the oauth api and hand over our <code class=\"language-text\">client_id</code> and <code class=\"language-text\">client_secret</code>, in return we get a time limited Bearer token to request data.</p>\n</li>\n<li>\n<p>Get a list of groups</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getADGroups</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>access_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    access_token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> groupResults <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://graph.microsoft.com/v1.0/groups?$top=10&amp;$filter=startsWith(displayName, '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">')&amp;$select=id,displayName&amp;$format=json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n      headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> Authorization<span class=\"token punctuation\">:</span> access_token <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> groups <span class=\"token operator\">=</span> groupResults <span class=\"token operator\">&amp;&amp;</span> groupResults<span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">return</span> groups\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For our use case we are searching by the start of the group name, and restricting our search to the top 10 results.</p>\n</li>\n<li>\n<p>Pagination!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getAllPages</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">pages<span class=\"token punctuation\">,</span> pageResults</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>access_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    access_token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Store results into pages</span>\n  <span class=\"token comment\">// If nextLink call getADpages with new link</span>\n  <span class=\"token comment\">// Repeat till nextLink doesnt exist then return</span>\n  pages <span class=\"token operator\">=</span> pages<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>pageResults<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageResults <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> pageResults<span class=\"token punctuation\">[</span><span class=\"token string\">'@odata.nextLink'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> page_results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>pageResults<span class=\"token punctuation\">[</span><span class=\"token string\">'@odata.nextLink'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n      headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> Authorization<span class=\"token punctuation\">:</span> access_token <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    pages <span class=\"token operator\">=</span> <span class=\"token function\">getAllPages</span><span class=\"token punctuation\">(</span>pages<span class=\"token punctuation\">,</span> page_results<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> pages\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNPages</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">pages<span class=\"token punctuation\">,</span> pageResults<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>access_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    access_token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Store results into pages</span>\n  <span class=\"token comment\">// If nextLink call getADpages with new link</span>\n  <span class=\"token comment\">// Repeat till nextLink doesnt exist then return</span>\n  pages <span class=\"token operator\">=</span> pages<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>pageResults<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageResults <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> pageResults<span class=\"token punctuation\">[</span><span class=\"token string\">'@odata.nextLink'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> page_results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>pageResults<span class=\"token punctuation\">[</span><span class=\"token string\">'@odata.nextLink'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n        headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> Authorization<span class=\"token punctuation\">:</span> access_token <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      pages <span class=\"token operator\">=</span> <span class=\"token function\">getNPages</span><span class=\"token punctuation\">(</span>pages<span class=\"token punctuation\">,</span> page_results<span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> pages\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>  We need some helper functions to paginate through the returned results when the number of members > 100\nthe graph api will return a property <code class=\"language-text\">@odata.nextLink</code> which contains a url to retrieve the next batch.</p>\n<p>  We have two helper functions, the first will keep going till the property is no longer present (very slow, many http requests)\nThe second takes a <code class=\"language-text\">n</code> parameter describing the level of recursion it should go to, this avoids it getting stuck in an infinite recursion loop (hopefully) and speeds things up.</p>\n</li>\n<li>\n<p>Get group members</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getADGroupMembers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">groupId</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>access_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    access_token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> groupResults <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://graph.microsoft.com/v1.0/groups/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>groupId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/transitiveMembers?$filter@odata.type eq '#microsoft.graph.user'</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n      headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> Authorization<span class=\"token punctuation\">:</span> access_token <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  members <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getAllPages</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">,</span> groupResults<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> members\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>  Grabs all the group members using the first pagination helper function.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNPagesADGroupMembers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">groupId<span class=\"token punctuation\">,</span> numPages</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>access_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    access_token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> groupResults <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://graph.microsoft.com/v1.0/groups/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>groupId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/transitiveMembers</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n      headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> Authorization<span class=\"token punctuation\">:</span> access_token <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  members <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getNPages</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">,</span> groupResults<span class=\"token punctuation\">,</span> numPages <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  members <span class=\"token operator\">=</span> members<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">member</span> <span class=\"token operator\">=></span> member<span class=\"token punctuation\">[</span><span class=\"token string\">'@odata.type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'#microsoft.graph.user'</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> members\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>  Grab the first n pages of the group members using the second pagination helper function.</p>\n</li>\n<li>\n<p>Check group membership for a single user and a list of groups</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">checkADGroupMembership</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ad_groups<span class=\"token punctuation\">,</span> email</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>access_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    access_token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> groupResults <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://graph.microsoft.com/v1.0/users/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>email<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/checkMemberGroups</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n      headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        Authorization<span class=\"token punctuation\">:</span> access_token<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      body<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> groupIds<span class=\"token punctuation\">:</span> ad_groups <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> groupResults <span class=\"token operator\">&amp;&amp;</span> groupResults<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here we pass a list of group id’s and a single email address, this uses a built in function\nin Microsoft graph and returns the <code class=\"language-text\">group_id&#39;s</code> the email is a member of.</p>\n</li>\n</ol>\n<h2>Make it fast</h2>\n<p>The microsoft graph API is…slow (understandably), for anything more then a single call we will be waiting\nmultiple seconds, for the cases of pagination where we might be fetching 5+ pages of users from a group\nwhere each call takes 1+ seconds this quickly adds up.</p>\n<p>So what we’re going to do is stick redis in front of our calls to the graph with a 3600 second expiry time.\nThis way our most popular calls are not hitting the graph each time, we only pay the penalty once.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Pre redis\n  ✓ Searching specific group (3038ms)\n  ✓ Searching specific group - case insensitive (625ms)\n  ✓ Fetching group and its members (2106ms)\n  ✓ Check AD group membership (942ms)\n  ✓ Get N pages of users (3777ms)\n\n  Post redis\n  ✓ Searching specific group (19ms)\n  ✓ Searching specific group - case insensitive (11ms)\n  ✓ Fetching group and its members (6ms)\n  ✓ Check AD group membership (1ms)\n  ✓ Get N pages of users (3ms)</code></pre></div>\n<h2>TADA</h2>\n<p>We’ve accomplished the tasks we set out to do, a good way to talk to Active Directory without\nneeding to be on premise.</p>\n<p>This allows project managers to setup a single group in active directory and reuse it elsewhere\nno further setup needed.</p>","frontmatter":{"title":"Let's talk to Active Directory","date":"July 21, 2019","description":"When you need to find out info about your users and groups"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/microsoft-graph/2019-07-21-lets-talk-to-AD/","previous":{"fields":{"slug":"/new-beginnings/"},"frontmatter":{"title":"New Beginnings"}},"next":null}}}