{"version":3,"sources":["webpack:///./src/templates/index-page.js"],"names":["__webpack_require__","d","__webpack_exports__","index_page_IndexPageTemplate","pageQuery","IndexPageTemplate","_ref","image","title","mainpitch","heading","subheading","description","intro","react_default","a","createElement","className","style","backgroundImage","childImageSharp","fluid","src","backgroundPosition","backgroundAttachment","display","height","lineHeight","justifyContent","alignItems","flexDirection","boxShadow","backgroundColor","color","padding","BlogRoll","gatsby_browser_entry","to","IndexPage","_ref2","frontmatter","data","markdownRemark","Layout"],"mappings":"0JAAAA,EAAAC,EAAAC,EAAA,sCAAAC,IAAAH,EAAAC,EAAAC,EAAA,8BAAAE,IAQO,IAAMC,EAAoB,SAAAC,GAAA,IAC/BC,EAD+BD,EAC/BC,MACAC,EAF+BF,EAE/BE,MAGAC,GAL+BH,EAG/BI,QAH+BJ,EAI/BK,WAJ+BL,EAK/BG,WAL+BH,EAM/BM,YAN+BN,EAO/BO,MAP+B,OAS/BC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEC,UAAU,gCACVC,MAAO,CACLC,gBAAe,QACXZ,EAAMa,gBAAkBb,EAAMa,gBAAgBC,MAAMC,IAAMf,GAD/C,IAGfgB,mBAAkB,WAClBC,qBAAoB,UAGtBV,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLO,QAAS,OACTC,OAAQ,QACRC,WAAY,IACZC,eAAgB,eAChBC,WAAY,OACZC,cAAe,WAGjBhB,EAAAC,EAAAC,cAAA,MACEC,UAAU,8EACVC,MAAO,CACLa,UACE,kEACFC,gBAAiB,kBACjBC,MAAO,QACPN,WAAY,IACZO,QAAS,WAGV1B,KAIPM,EAAAC,EAAAC,cAAA,WAASC,UAAU,6BACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASR,EAAUD,QAEnCM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYR,EAAUG,eAGxCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sCAAd,kBAGAH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,MACArB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMnB,UAAU,MAAMoB,GAAG,SAAzB,uBAsDPjC,GAFEkC,UA1BG,SAAAC,GAAc,IACtBC,EADsBD,EAAXE,KACUC,eAArBF,YAER,OACE1B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAACb,EAAD,CACEI,MAAOiC,EAAYjC,MACnBC,MAAOgC,EAAYhC,MACnBE,QAAS8B,EAAY9B,QACrBC,WAAY6B,EAAY7B,WACxBF,UAAW+B,EAAY/B,UACvBG,YAAa4B,EAAY5B,YACzBC,MAAO2B,EAAY3B,UAgBL","file":"component---src-templates-index-page-js-c7ffd30047a0d6ac9b89.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport Features from \"../components/Features\";\nimport BlogRoll from \"../components/BlogRoll\";\n\nexport const IndexPageTemplate = ({\n  image,\n  title,\n  heading,\n  subheading,\n  mainpitch,\n  description,\n  intro\n}) => (\n  <div>\n    <div\n      className=\"full-width-image margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n        backgroundPosition: `top left`,\n        backgroundAttachment: `fixed`\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          height: \"150px\",\n          lineHeight: \"1\",\n          justifyContent: \"space-around\",\n          alignItems: \"left\",\n          flexDirection: \"column\"\n        }}\n      >\n        <h1\n          className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n          style={{\n            boxShadow:\n              \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n            backgroundColor: \"rgb(255, 68, 0)\",\n            color: \"white\",\n            lineHeight: \"1\",\n            padding: \"0.25em\"\n          }}\n        >\n          {title}\n        </h1>\n      </div>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <div className=\"content\">\n                <div className=\"content\">\n                  <div className=\"tile\">\n                    <h1 className=\"title\">{mainpitch.title}</h1>\n                  </div>\n                  <div className=\"tile\">\n                    <h3 className=\"subtitle\">{mainpitch.description}</h3>\n                  </div>\n                </div>\n                <div className=\"column is-12\">\n                  <h3 className=\"has-text-weight-semibold is-size-2\">\n                    Latest stories\n                  </h3>\n                  <BlogRoll />\n                  <div className=\"column is-12 has-text-centered\">\n                    <Link className=\"btn\" to=\"/blog\">\n                      Read more\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nIndexPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  subheading: PropTypes.string,\n  mainpitch: PropTypes.object,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array\n  })\n};\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n      />\n    </Layout>\n  );\n};\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object\n    })\n  })\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        mainpitch {\n          title\n          description\n        }\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 240, quality: 64) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            text\n          }\n          heading\n          description\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}